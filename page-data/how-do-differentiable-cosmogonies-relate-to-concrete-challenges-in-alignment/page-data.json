{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How do differentiable cosmogonies relate to concrete challenges in alignment?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment\"\n  }, \"How do differentiable cosmogonies relate to concrete challenges in alignment?\"), mdx(\"p\", null, \"Differentiable cosmogonies avoid the whole clash of human and AI intents over the shape of the world by sequestering the AI to a simulation which contains as little information as possible about the human world. This is meant as an attempt to avoid breakout through newly-detected loopholes. Unfortunately, this drastically reduces the usefulness of AI per unit of compute, because it requires a massive particle-resolution simulation over a massive number of timesteps. A few technical tricks might help shave off a few OOMs of compute (e.g. constrain particles to local interaction), but that doesn't even start unpacking the problem of translating the insights devised by replicators into human terms beyond Rorschach make-believe. Regardless, it aims to sidestep the challenge of intent alignment as a whole.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Differentiable Cosmogonies\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"differentiable-cosmogonies\"\n  }, \"Differentiable Cosmogonies\"), mdx(\"p\", null, \"Training a model on data about the world (e.g. Wikipedia, books, articles, papers, etc.) makes it difficult to box, as it's likely to exploit loopholes in the world (e.g. from physics to sociology) based on its evidence. Given this, we could build a one-way model-to-human channel by tasking the model with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"learning a physics\"), \" which reliably causes lifelike structures to emerge from noise, before us gleaning insights from the resulting structures in a Voyager-pretending-Earth-is-alien sort of way. Life could be operationalized as entropy-fighting across space (e.g. forming unlikely chunks of matter) and time (e.g. changing in unlikely ways from moment to moment), while the physics to be learned could be modeled by a transformer mapping particle-tokens from one timestep to the next. Local-only interactions could help fight the quadratic attention costs, while particle-tokens could have slots for velocity, momentum, and chemical properties, depending on the targeted level of abstraction.\"), mdx(\"p\", null, \"At the moment, I think this is not a particularly promising frame, for two main reasons. First, it might be very difficult to try to understand the emerging aliens beyond mathematical formalism which might as well be framed as a narrow AI task. Second, existing ML models seem to exhibit enough alienness for people to find it insightful to probe them for hours, intentionally going for more alienness might make it no more practical than an Oujia board.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment\",\n    \"title\": \"how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment\"\n  }, \"[[how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-would-a-training-story-look-like-for-differentiable-colonies\",\n    \"title\": \"how-would-a-training-story-look-like-for-differentiable-colonies\"\n  }, \"[[how-would-a-training-story-look-like-for-differentiable-colonies]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-do-differentiable-cosmogonies-relate-to-microscope-ai\",\n    \"title\": \"how-do-differentiable-cosmogonies-relate-to-microscope-ai\"\n  }, \"[[how-do-differentiable-cosmogonies-relate-to-microscope-ai]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/could-we-understand-emerging-aliens\",\n    \"title\": \"could-we-understand-emerging-aliens\"\n  }, \"[[could-we-understand-emerging-aliens]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2c3721b1-5de3-5ea1-b694-4055ec9c8136","fields":{"slug":"/differentiable-cosmogonies","title":"Differentiable Cosmogonies"}}}]},"fields":{"slug":"/how-do-differentiable-cosmogonies-relate-to-concrete-challenges-in-alignment","title":"How do differentiable cosmogonies relate to concrete challenges in alignment?"}}},"pageContext":{"id":"1bc5b28c-b202-5103-b3c6-9e8f0173f1c6"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}