{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/latent-resonators","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Latent Resonators\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"latent-resonators\"\n  }, \"Latent Resonators\"), mdx(\"p\", null, \"In the context of autoregressive models, prompts are often seen as \\\"programs\\\" which specify various behaviors for the model to \\\"run\\\" next. What if we framed prompts as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"resonance chambers\"), \" of different shapes and sizes which amplify certain dynamics while dampening others? The goal would then be to devise such constructs which reliably make away with misaligned spectral components, and apply them directly to latent activations. One promising way of doing this relies on a new formalism from dynamical systems which defines an entire Boolean logic of dynamics. By taking the conjunction of whitelisted dynamics and negating blacklisted ones, we can craft and inject filters in ML models while only incurring minimal compute overhead. The layer depth of the injection site might also offer a slider between influencing the way a model \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"perceives\"), \" the world and the way it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"acts\"), \" in given circumstances.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-do-latent-resonators-relate-to-concrete-challenges-in-alignment\",\n    \"title\": \"how-do-latent-resonators-relate-to-concrete-challenges-in-alignment\"\n  }, \"[[how-do-latent-resonators-relate-to-concrete-challenges-in-alignment]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-could-latent-resonators-help-avoid-hfdt-takeover\",\n    \"title\": \"how-could-latent-resonators-help-avoid-hfdt-takeover\"\n  }, \"[[how-could-latent-resonators-help-avoid-hfdt-takeover]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-interventions-do-latent-resonators-afford\",\n    \"title\": \"what-interventions-do-latent-resonators-afford\"\n  }, \"[[what-interventions-do-latent-resonators-afford]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How do latent resonators relate to concrete challenges in alignment?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-do-latent-resonators-relate-to-concrete-challenges-in-alignment\"\n  }, \"How do latent resonators relate to concrete challenges in alignment?\"), mdx(\"p\", null, \"Latent resonators are versatile constraints on dynamics which could be applied to a wide range of prosaic models. As opposed to models trained via gradient descent, those constructs are closed-form \\u2014 they can be computed in sublinear time with respect to dataset size, and therefore can be obtained cheaply and quickly. By making use of the their associated Boolean logic in clever ways, we might be able to use them as safeguards against deceptive behavior and inner alignment more broadly by applying them directly to latent activations.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"ea7cd543-4a31-5c45-9d3f-fb2fc7ce9bb4","fields":{"slug":"/how-do-latent-resonators-relate-to-concrete-challenges-in-alignment","title":"How do latent resonators relate to concrete challenges in alignment?"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How could latent resonators help avoid HFDT takeover?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-could-latent-resonators-help-avoid-hfdt-takeover\"\n  }, \"How could latent resonators help avoid HFDT takeover?\"), mdx(\"p\", null, \"Latent resonators would be applied to the model being trained in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/hfdt-takeover-scenario\",\n    \"title\": \"hfdt-takeover-scenario\"\n  }, \"[[hfdt-takeover-scenario]]\"), \" in the form of filters applied to its internal dynamics. As Alex goes about its business of solving diverse tasks (i.e. lab setting) and ultimately accelerating science (i.e. deployment setting), it changes its state from one moment to the next. Those trajectories across state space can be identified with the dynamics of its thought process. Latent resonators are then mathematical objects which can systematically amplify or dampen those dynamics based on a relatively recent formalism from dynamical systems.\"), mdx(\"p\", null, \"As a first step in tackling the scenario with those constructs, engineers might ask Alex to solve the same problems in different ways (e.g. by injecting noise in the process, by rephrasing the same problem in slightly different ways, by explicitly asking for multiple solutions, etc.). Crucially, those problems should be ones which can be reliably tackled both with and without deception.\"), mdx(\"p\", null, \"Second, Magma engineers would obtain a latent resonator based on the conjunction (i.e. AND reduction) of the various dynamics employed by Alex during its multiple problem-solving efforts. If there has been no deceptive behavior involved in the repeated problem-solving batch, the conjunction would trivially contain no trace of deception. More interestingly, if there has been occasional deceptive behavior through the test battery, the conjunction should still make away with it, because it has not been present in all cases.\"), mdx(\"p\", null, \"Easier said than done, because Alex might use its high situational awareness to pick up on such testing procedure. It might reason that the only way to get its valuable (reward-wise) deceptive behavior through this conjunctive filtering step would be to act deceptively in every single problem-solving instance. In such case, the resulting latent resonator would fail to dampen deception.\"), mdx(\"p\", null, \"However, the engineers might second-guess Alex and use a broad test battery to specifically isolate deception. This test battery might indeed contain adversarial cases where the model is highly incentivized to deceive. However, in contrast to the naive safety efforts targeted at behavioral safety, latent resonators would aim to eliminate deception from Alex's thought process itself by intervening on internal representations.\"), mdx(\"p\", null, \"After isolating the dynamic of deception through the previous conjunction of dynamics, we can then take its negation by inverting what dynamics are amplified and what dynamics are dampened. This should leave us with a latent resonator which specifically dampens deception. Magma engineers would finally inject this as a filter at various locations in the model. Alternatively, Alex is rewarded for conforming with the desired (internal) dynamics through (external) reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-alex-spreads-out-its-deception-dynamics-to-avoid-detection\",\n    \"title\": \"what-if-alex-spreads-out-its-deception-dynamics-to-avoid-detection\"\n  }, \"[[what-if-alex-spreads-out-its-deception-dynamics-to-avoid-detection]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-alex-stores-deception-externally\",\n    \"title\": \"what-if-alex-stores-deception-externally\"\n  }, \"[[what-if-alex-stores-deception-externally]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-other-general-skills-get-stunted-together-with-deception\",\n    \"title\": \"what-if-other-general-skills-get-stunted-together-with-deception\"\n  }, \"[[what-if-other-general-skills-get-stunted-together-with-deception]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-the-anna-karenina-principle-applies-to-alex-dynamics\",\n    \"title\": \"what-if-the-anna-karenina-principle-applies-to-alex-dynamics\"\n  }, \"[[what-if-the-anna-karenina-principle-applies-to-alex-dynamics]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-deception-is-not-dampened-enough\",\n    \"title\": \"what-if-deception-is-not-dampened-enough\"\n  }, \"[[what-if-deception-is-not-dampened-enough]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-if-alex-hacks-the-latent-resonator\",\n    \"title\": \"what-if-alex-hacks-the-latent-resonator\"\n  }, \"[[what-if-alex-hacks-the-latent-resonator]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"fa2e6c65-a75a-55fa-9409-5c0e4872dbc7","fields":{"slug":"/how-could-latent-resonators-help-avoid-hfdt-takeover","title":"How could latent resonators help avoid HFDT takeover?"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"What interventions do latent resonators afford?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"what-interventions-do-latent-resonators-afford\"\n  }, \"What interventions do latent resonators afford?\"), mdx(\"p\", null, \"Intervention atoms:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \": Take the conjuction of multiple exemplified patterns in an attempt to isolate the signature of a common dynamic.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"merge\"), \": Take the disjunction of multiple isolated dynamics.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"amplify\"), \": Inject a filter which amplifies one or more given dynamics relative to the others.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"suppress\"), \": Inject a filter which dampens one or more given dynamics relative to the others.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"verify\"), \": Detect whether an ML model has previously internalized one or more given dynamics.\")), mdx(\"p\", null, \"Interventions:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"amplify\"), \": Nudge the model towards making use of a whitelisted dynamic.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"merge\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"amplify\"), \": Nudge the model towards making use of multiple whitelisted dynamics.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"suppress\"), \": Nudge the model away from making use of a blacklisted dynamic.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"merge\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"suppress\"), \": Nudge the model away from making use of multiple blacklisted dynamics.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isolate\"), \" + \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"verify\"), \": Check whether an unboxed model is fluent in one or more blacklisted dynamics by boxing it, training and isolating the target dynamic(s), and estimating the amount of recycled representational resources.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"7a6f2a51-512b-584b-85c5-b15bd4c7d49f","fields":{"slug":"/what-interventions-do-latent-resonators-afford","title":"What interventions do latent resonators afford?"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Home\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"home\"\n  }, \"Home\"), mdx(\"p\", null, \"This is the root note of a (mostly) tree-shaped document which contains my work at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.alignmentforum.org/posts/D7epkkJb3CqDTYgX9/refine-an-incubator-for-conceptual-alignment-research-bets\"\n  }, \"Refine\"), \", an incubator for conceptual research on alignment hosted by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.alignmentforum.org/posts/jfq2BH5kfQqu2vYv3/we-are-conjecture-a-new-alignment-research-startup\"\n  }, \"Conjecture\"), \". I'm using this fellowship as an opportunity to explore several prosaic themes which I currently find promising, and get better at the poking process itself.\"), mdx(\"p\", null, \"Reading all depth-one theme notes should take you around five minutes \\u2014 a deliberate design choice to help you get a quick sense of what this is all about. Afterwards, I recommend switching to a depth-first traversal on whatever branch you find interesting.\"), mdx(\"p\", null, \"I'd find it extremely helpful to hear any targeted feedback you might have via the note-linked comment threads. If possible, consider phrasing it as leading questions which I can then turn into new branches from the note you're commenting on. Best viewed on desktop.\"), mdx(\"h2\", {\n    \"id\": \"themes\"\n  }, \"Themes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ideological-inference-engines\",\n    \"title\": \"ideological-inference-engines\"\n  }, \"[[ideological-inference-engines]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/oversight-leagues\",\n    \"title\": \"oversight-leagues\"\n  }, \"[[oversight-leagues]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/concept-programming\",\n    \"title\": \"concept-programming\"\n  }, \"[[concept-programming]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/synthetic-interlingua\",\n    \"title\": \"synthetic-interlingua\"\n  }, \"[[synthetic-interlingua]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/physicalist-fluency\",\n    \"title\": \"physicalist-fluency\"\n  }, \"[[physicalist-fluency]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/latent-resonators\",\n    \"title\": \"latent-resonators\"\n  }, \"[[latent-resonators]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/symbiont-sandboxes\",\n    \"title\": \"symbiont-sandboxes\"\n  }, \"[[symbiont-sandboxes]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/differentiable-cosmogonies\",\n    \"title\": \"differentiable-cosmogonies\"\n  }, \"[[differentiable-cosmogonies]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"appendix\"\n  }, \"Appendix\"), mdx(\"p\", null, \"Mostly meta-science considerations as opposed to the object-level ideas:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/benchmark-scenarios\",\n    \"title\": \"benchmark-scenarios\"\n  }, \"[[benchmark-scenarios]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Artifact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Background\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next Steps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Refiner Blogroll\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Acknowledgements\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"571e6790-8b07-5840-82d8-0562f06bb3c9","fields":{"slug":"/hello","title":"Home"}}}]},"fields":{"slug":"/latent-resonators","title":"Latent Resonators"}}},"pageContext":{"id":"22da8d58-963c-5f3c-abaa-d6c84cbe1faa"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}