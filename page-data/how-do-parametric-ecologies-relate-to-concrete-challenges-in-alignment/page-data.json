{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How do parametric ecologies relate to concrete challenges in alignment?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment\"\n  }, \"How do parametric ecologies relate to concrete challenges in alignment?\"), mdx(\"p\", null, \"As this theme encourages a somewhat different frame for ML as a whole, its direct applications to alignment are not immediately apparent. One application would be as a language for assembling collections of models into self-regulating systems trained end-to-end to avoid imbalances (e.g. mode collapse in GAN training). Another application would be an approach to preserving internal features of an ecology (e.g. human values) during a shift to a different computational niche (e.g. new capabilities). In this, parametric ecologies tackle concerns related to unbounded optimization and objective robustness.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Parametric Ecologies\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"parametric-ecologies\"\n  }, \"Parametric Ecologies\"), mdx(\"p\", null, \"Life is arguably the primordial world-optimizer, with biotic factors being known to have caused \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.sciencedirect.com/science/article/pii/S0960982215010908\"\n  }, \"major shifts\"), \" in the abiotic world to suit their needs: oxygen-rich atmosphere, fertile soils, etc. We find ourselves in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/The_Blind_Watchmaker\"\n  }, \"\\\"blind watchmaker\\\"\"), \" position where we can bring into existence systems beyond our comprehension by merely defining a computational niche and applying optimization pressure. One way of modeling niche-bound ecologies is in term of their inputs and outputs: what kinds of energy and matter they consume in relation to what they offer for others to consume. If framing ML models as ecologies adapting to an (often unnaturally fixed) computational niche, all sorts of neat parallels arise: transfer learning as exaptation, instrumental convergence as convergent evolution, regularizers as stressors enforcing resilience, gradualism, meta-learning as internal selection, etc. From here, we could build on ideas from ecosystem engineering and remnants of cybernetics (which, temptingly, means \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"steersman\"), \") to explore the vocabulary of stable \\\"arrangements\\\" of ecologies, similar to the clever setups involved in backtranslation, diffusion, or adversarial training.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment\",\n    \"title\": \"how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment\"\n  }, \"[[how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c2873cfd-4c2b-5e67-9123-9fbcd93e4de4","fields":{"slug":"/parametric-ecologies","title":"Parametric Ecologies"}}}]},"fields":{"slug":"/how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment","title":"How do parametric ecologies relate to concrete challenges in alignment?"}}},"pageContext":{"id":"4a14619e-8d08-5889-99e9-fce3f2b8f859"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}