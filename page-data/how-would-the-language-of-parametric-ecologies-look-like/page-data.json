{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/how-would-the-language-of-parametric-ecologies-look-like","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How would the language of parametric ecologies look like?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-would-the-language-of-parametric-ecologies-look-like\"\n  }, \"How would the language of parametric ecologies look like?\"), mdx(\"p\", null, \"Ingredients:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"learned maps\"), \" (directed solid arrow): ML models being trained\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"frozen maps\"), \" (directed dashed arrow): frozen ML models / non-ML maps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"distances\"), \" (bidirectional solid arrow): divergence, distance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"optimization pressure points\"), \" (+/- bubble): gradient ascent/descent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(modeled) distributions\"), \" (numbers with optional hats): input / output / misc distributiosn\")), mdx(\"p\", null, \"Design choices:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Numbered distributions over lettered ones because one model's output is another model's inputs in interesting arrangements. Over named ones because names create clutter.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name learned maps by letter on tail. Shared weights translated to identical names across arrows.\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://e1.pcloud.link/publink/show?code=VZzS44ZWnePcvhLJWyjkri2TloCDJxRlv5y\"\n  }, \"whiteboard\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Parametric Ecologies\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"parametric-ecologies\"\n  }, \"Parametric Ecologies\"), mdx(\"p\", null, \"Life is arguably the primordial world-optimizer, with biotic factors being known to have caused \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.sciencedirect.com/science/article/pii/S0960982215010908\"\n  }, \"major shifts\"), \" in the abiotic world to suit their needs: oxygen-rich atmosphere, fertile soils, etc. We find ourselves in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/The_Blind_Watchmaker\"\n  }, \"\\\"blind watchmaker\\\"\"), \" position where we can bring into existence systems beyond our comprehension by merely defining a computational niche and applying optimization pressure. One way of modeling niche-bound ecologies is in term of their inputs and outputs: what kinds of energy and matter they consume in relation to what they offer for others to consume. If framing ML models as ecologies adapting to an (often unnaturally fixed) computational niche, all sorts of neat parallels arise: transfer learning as exaptation, instrumental convergence as convergent evolution, regularizers as stressors enforcing resilience, gradualism, meta-learning as internal selection, etc. From here, we could build on ideas from ecosystem engineering and remnants of cybernetics (which, temptingly, means \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"steersman\"), \") to explore the vocabulary of stable \\\"arrangements\\\" of ecologies, similar to the clever setups involved in backtranslation, diffusion, or adversarial training.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment\",\n    \"title\": \"how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment\"\n  }, \"[[how-do-parametric-ecologies-relate-to-concrete-challenges-in-alignment]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-holds-and-what-breaks-in-the-parametric-ecologies-analogy\",\n    \"title\": \"what-holds-and-what-breaks-in-the-parametric-ecologies-analogy\"\n  }, \"[[what-holds-and-what-breaks-in-the-parametric-ecologies-analogy]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/what-low-hanging-safety-mechanisms-are-parametric-ecologies-hinting-at\",\n    \"title\": \"what-low-hanging-safety-mechanisms-are-parametric-ecologies-hinting-at\"\n  }, \"[[what-low-hanging-safety-mechanisms-are-parametric-ecologies-hinting-at]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/are-training-arrangements-inspired-by-parametric-ecologies-likely-to-have-capability-externalities\",\n    \"title\": \"are-training-arrangements-inspired-by-parametric-ecologies-likely-to-have-capability-externalities\"\n  }, \"[[are-training-arrangements-inspired-by-parametric-ecologies-likely-to-have-capability-externalities]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-would-the-language-of-parametric-ecologies-look-like\",\n    \"title\": \"how-would-the-language-of-parametric-ecologies-look-like\"\n  }, \"[[how-would-the-language-of-parametric-ecologies-look-like]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c2873cfd-4c2b-5e67-9123-9fbcd93e4de4","fields":{"slug":"/parametric-ecologies","title":"Parametric Ecologies"}}}]},"fields":{"slug":"/how-would-the-language-of-parametric-ecologies-look-like","title":"How would the language of parametric ecologies look like?"}}},"pageContext":{"id":"345484af-cb3b-565e-9e47-033b490e41b4"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}